name: JRuby

permissions:
  contents: read

env:
  K_SOUP_COV_DO: false

on:
  push:
    branches:
      - 'main'
      - "*-stable"
    tags:
      - '!*' # Do not execute on tags
  pull_request:
    branches:
      - '*'
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  test:
    name: Specs ${{ matrix.ruby }} ${{ matrix.appraisal_name }}${{ matrix.name_extra || '' }}
    if: "!contains(github.event.commits[0].message, '[ci skip]') && !contains(github.event.commits[0].message, '[skip ci]')"
    runs-on: ubuntu-22.04
    continue-on-error: ${{ matrix.experimental || endsWith(matrix.ruby, 'head') }}
    env: # $BUNDLE_GEMFILE must be set at job level, so it is set for all steps
      BUNDLE_GEMFILE: ${{ github.workspace }}/${{ matrix.gemfile }}.gemfile
    strategy:
      matrix:
        include:
          # jruby-9.4 (targets Ruby 3.1 compatibility)
          - ruby: "jruby-9.4"
            appraisal_name: "ar-7-1-r3"
            exec_cmd: "rake spec:orm:active_record"
            gemfile: "Appraisal.root"
            rubygems: default
            bundler: default

          # jruby-9.4 (targets Ruby 3.1 compatibility)
          # TODO: Mark non-experimental once fixed:
          # https://github.com/jruby/activerecord-jdbc-adapter/issues/1175
          - ruby: "jruby-9.4"
            appraisal_name: "ar-7-2"
            exec_cmd: "rake spec:orm:active_record"
            gemfile: "Appraisal.root"
            experimental: true
            rubygems: default
            bundler: default

          # jruby-9.4 (targets Ruby 3.1 compatibility)
          - ruby: "jruby-9.4"
            appraisal_name: "sequel-5.86-r3"
            exec_cmd: "rake spec:orm:sequel"
            gemfile: "Appraisal.root"
            rubygems: default
            bundler: default

    steps:
      ### COUCHDB
      - name: Start CouchDB
        uses: iamssen/couchdb-github-action@master
        if: "endsWith(matrix.exec_cmd, 'couch_potato')"
        with:
          couchdb-version: "3.4.1"

      ### SMOKE-TEST
      - name: Smoke CouchDB
        if: "endsWith(matrix.exec_cmd, 'couch_potato')"
        run: |
          curl -f http://127.0.0.1:5984/
          curl -X POST -H "Content-Type: application/json; charset=utf-8" -d '{"name": "admin", "password": "password"}' http://127.0.0.1:5984/_session

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby & RubyGems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          rubygems: ${{ matrix.rubygems }}
          bundler: ${{ matrix.bundler }}
          bundler-cache: false

      # Raw `bundle` will use the BUNDLE_GEMFILE set to matrix.gemfile (i.e. Appraisal.root)
      # We need to do this first to get appraisal installed.
      # NOTE: This does not use the main Gemfile at all.
      - name: Install Root Appraisal
        run: bundle
      - name: Appraisal for ${{ matrix.ruby }}@${{ matrix.appraisal_name }}
        run: bundle exec appraisal ${{ matrix.appraisal_name }} bundle
      - name: Run ${{ matrix.exec_cmd }} on ${{ matrix.ruby }}@${{ matrix.appraisal_name }}
        run: bundle exec appraisal ${{ matrix.appraisal_name }} bundle exec ${{ matrix.exec_cmd }}
